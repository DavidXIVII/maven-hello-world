# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven


name: Maven CI

on:
  push:
    branches: [ "master" ]
    
env:
  version: 0

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 11
      uses: actions/setup-java@v1
      with:
        java-version: 8
        
    - name: Update POM Version
      run: mvn validate -DbumpPatch --file ./my-app/pom.xml
      
    - name: Build with Maven
      run: mvn -B package --file ./my-app/pom.xml
        
    - name: Commit files
      run: |
        git config --local user.email "github-actions[bot]@users.noreply.github.com"
        git config --local user.name "github-actions[bot]"
        git add my-app/pom.xml
        git commit -m "Updated Version" -a    
        
    - name: Push Commit
      uses: ad-m/github-push-action@master
      with:
        github_token: ${{ secrets.HUB_TOKEN }}
        branch: ${{ github.ref }}
        force_with_lease: true
  
    - name: Login to DockerHub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}           
      
      
    - name: Fetch Version & Build Image
      env:
         version: $(mvn help:evaluate -Dexpression=project.version -q -DforceStdout --file ./my-app/pom.xml)
         name: $(mvn help:evaluate -Dexpression=project.name -q -DforceStdout --file ./my-app/pom.xml)
      run: |
        docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/java:v${{ env.version }} \
        --build-arg version=${{ env.version }} \
        --build-arg app-name=${{ env.name }} \
        -f my-app/Dockerfile .
        docker push ${{ secrets.DOCKERHUB_USERNAME }}/java:v${{ env.version }}
